---
import { fetchFutureEvents } from "../../lib/queries";
import type { Event } from "../../types";
import EventCard from "./event-card.astro";
import ContentSection from "../content-section.astro";

const now = new Date();
const futureEvents = await fetchFutureEvents(now.toISOString());
---

<ContentSection title="Eventos" id="events">
  {
    futureEvents.eventCollection.items.length < 1 && (
      <>
        <p> Proximamente... </p>
      </>
      <section>
          <!-- Contenedor principal de Swiper -->
          <!-- Slider main container -->
          <div class="swiper-container">
              <!-- Additional required wrapper -->
              <div class="swiper-wrapper">
                  <!-- Slides -->
                  <div class="swiper-slide">
                      <img src="http://marveltheme.com/tf/html/appai/appai/img/app-screenshots/10.jpg" alt="">
                  </div>
                  <div class="swiper-slide">
                      <img src="http://marveltheme.com/tf/html/appai/appai/img/app-screenshots/11.jpg" alt="">
                  </div>
                  <div class="swiper-slide">
                      <img src="http://marveltheme.com/tf/html/appai/appai/img/app-screenshots/12.jpg" alt="">
                  </div>
              </div>
              <!-- If we need navigation buttons -->
              <div class="swiper-button-prev"></div>
              <div class="swiper-button-next"></div>
          </div>
      </section>
    )
  }
  <ul class="grid max-w-6xl grid-cols-1 gap-2 md:grid-cols-2 lg:grid-cols-3">
    {
      futureEvents.eventCollection.items.map((event: Event) => (
        <EventCard event={event} imageUrl={event.image.url} />
      ))
    }
  </ul>
  <div class="flex size-full flex-col justify-between overflow-x-hidden">
    <div>
      <div
        class="flex overflow-y-auto [-ms-scrollbar-style:none] [scrollbar-width:none] [&::-webkit-scrollbar]:hidden"
      >
        <div class="flex items-stretch gap-3 p-4">
          {
            futureEvents.eventCollection.items.map((event: Event) => (
              <div class="flex h-full min-w-60 flex-1 flex-col gap-4 rounded-lg">
                <div
                  class="flex aspect-[3/4] w-full flex-col rounded-xl bg-cover bg-center bg-no-repeat"
                  style={`background-image: url(${event.image.url});`}
                />
                <div>
                  <p class="font-medium leading-normal text-base">
                    {event.name}
                  </p>
                  <p class="font-normal leading-normal text-[#A18249] text-sm">
                    Miércoles 23 | 20:00
                  </p>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</ContentSection>

<script>
    // Core de Swiper y estilos
    import Swiper from "swiper";
    import "swiper/css";
    // Módulo Navigation de Swiper y estilos
    import { Navigation } from "swiper/modules";
    import "swiper/css/navigation";

    // Configurar Swiper
    const swiper = new Swiper('.swiper-container', {
        slidesPerView: 'auto',
        spaceBetween: 0, //if you set the value other than 0, you will get some bug when viewport is resized, use CSS instead
        centeredSlides: true,
        grabCursor: true,
        parallax: true,
        effect: "coverflow",
        coverflowEffect: {
            rotate: 0,
            stretch: 10,
            depth: 10,
            scale: .8,
            modifier: 1,
            slideShadows: false,
        },
        pagination: {
            el: '.swiper-pagination',
            clickable: true,
        },
    });
</script>

<style>
    .swiper-container {
        width: 100%;
        height: 200px;
        margin-top: 2rem;
    }
    .swiper-slide {
        text-align: center;
        font-size: 18px;
        background: #fff;
        width: 60%;
        transform: scale(0.85);

        /* Center slide text vertically */
        box-sizing: border-box;
        display: -webkit-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: all 0.2s ease-in;
    }
</style>
