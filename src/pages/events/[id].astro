---
import BaseLayout from "~/layouts/BaseLayout.astro";
import Map from "~/components/events/Map";
import Week from "~/components/events/Week";
import Countdown from "~/components/events/Countdown";
import Members from "~/components/events/members.astro";
import RichText from "~/components/events/richText.astro";
import { fetchEventById } from "~/lib/queries";
import { Icon } from "astro-icon/components";

export const prerender = false;

interface IMembers {
  items: Member[];
}

interface Member {
  name: string;
  position: string;
  instagram: string;
  image: Image;
}

interface Image {
  url: string;
}

interface Location {
  lat: number;
  lon: number;
}

interface EventDetails {
  name: string;
  content?: { json: any };
  image: { url: string };
  date: string;
  location: Location;
  locationAddress: string;
  membersCollection: IMembers;
  locationCity: string;
}

interface EventResponse {
  event: EventDetails;
}

const { id } = Astro.params;

const { event }: EventResponse = await fetchEventById(id);
const eventDate = event.date ? new Date(event.date) : null;
---

<BaseLayout title={event.name}>
  <a
    href="/"
    class="fixed left-4 top-4 rounded-full bg-primary text-white transition duration-300 hover:bg-secondary"
  >
    <Icon name="mdi:arrow-back" class="m-2 text-white text-5xl" />
  </a>

  <section class="h-screen w-screen px-2 py-24 md:px-24">
    <div
      id="bento-grid"
      class="lg:grid-rows-14 grid w-full grid-cols-1 gap-4 *:translate-y-[100vh] *:overflow-hidden *:rounded-xl *:border-2 *:border-neutral-700 *:shadow-2xl *:shadow-neutral-950 hover:*:border-primary lg:grid-cols-4 xl:h-full xl:grid-rows-8"
    >
      {
        event.content && (
          <div class="bg-neutral-900 p-4 lg:col-span-2 lg:row-span-8 col-span-1">
            <RichText content={event.content} />
          </div>
        )
      }
      {
        eventDate && eventDate > new Date() && (
          <div class=" bg-neutral-900 py-1 lg:col-span-2 xl:col-span-1 col-span-1">
            <Countdown eventDate={eventDate} client:only="react" />
          </div>
        )
      }
      <div
        class="group lg:col-span-2 lg:row-span-5 xl:col-span-1 xl:row-span-4 col-span-1 h-[700px] lg:h-full"
        style={`background: url(${event.image.url}) center/cover no-repeat`}
      >
      </div>
      {
        eventDate && (
          <div class="lg:col-span-2 lg:row-span-2 xl:col-span-1 xl:row-span-3 col-span-1">
            <Week date={eventDate} />
          </div>
        )
      }
      {
        event.membersCollection && event.membersCollection.items && (
          <div class="bg-neutral-900 py-4 lg:col-span-2 lg:row-span-4 xl:col-span-1 col-span-1 h-96 md:h-full">
            <Members members={event.membersCollection.items} />
          </div>
        )
      }

      {
        event.location && (
          <div class="lg:col-span-2 lg:row-span-4 xl:col-span-1 col-span-1 h-[700px] lg:h-full">
            <Map
              location={event.location}
              city={event.locationCity}
              address={event.locationAddress}
              client:only="react"
            />
          </div>
        )
      }
    </div>
  </section>
</BaseLayout>

<script>
  const children = document.querySelectorAll("#bento-grid>*");
  children.forEach((child, index) => {
    const duration = 100 + index * 100;
    (child as HTMLElement).style.transition = `transform ${duration}ms ease`;
  });

  setTimeout(() => {
    document
      .getElementById("bento-grid")
      ?.classList.remove("*:translate-y-[100vh]");
  });
</script>
